groups:
  - name: "main"
    jobs:
      - "build"
  - name: "resources"
    jobs:
      - "version-resource"
      
resources:
  - name: "git"
    type: git
    check_every: 30s
    source:
      uri: "git@github.com:markuskobler/demo-app.git"
      branch: "version-resource"
      private_key: ((private_key))

  - name: "docker"
    type: docker-image
    source:
      repository: "quay.io/markus/demo-app"
      tag: "latest"
      username: "markus+concourse"
      password: ((docker_password))

  - name: "version-resource"
    type: docker-image
    source:
      repository: "quay.io/markus/demo-app"
      tag: "version-resource"
      username: "markus+concourse"
      password: ((docker_password))

jobs:
  - name: "build"
    plan:
      - get: demo
        resource: git
        trigger: true
      - task: build
        timeout: 10m
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: "quay.io/markus/demo-build"
              tag: "golang-1.10-alpine"

          inputs:
            - { name: "demo", path: go }
          outputs:
            - { name: out }
          params:
            CGO_ENABLED: "0"

          run:
            path: sh
            dir: go
            args:
              - -xc
              - |
                go generate ./src/demo
                go build -o ../out/demo --ldflags "-X main.commit=$(git rev-parse HEAD)" ./src/demo
                cp Dockerfile ../out/
      - put: docker
        params: { build: out }
        get_params: { skip_download: true }

  - name: version-resource
    serial: true
    plan:
      - get: git
        trigger: true
      - task: build
        file: git/src/resources/version/.ci/build.yml
      - put: version-resource
        params:
          build: build
          tag_as_latest: true
          get_params: { skip_download: true }
